#* @vtlvariable name="StringUtils" type="org.apache.commons.lang3.StringUtils" *#
package ${item.package};

/*
* ----------------------------------------------------------------
* --- WARNING: THIS FILE IS GENERATED AND WILL BE OVERWRITTEN!
* --- Generated at ${date.get('yyyy-MM-dd HH:mm:ss')}
* ----------------------------------------------------------------
*/

import com.coretex.orm.core.services.items.context.ItemContext;
#{if}(${item.parentItem})#{else}import com.coretex.meta.AbstractGenericItem;#{end}

#foreach(${import} in ${item.imports})
import ${import};
#end

#if(${StringUtils.isNotBlank(${item.description})})
/**
* ${item.description}
*/
#end
public class ${item.typeName} extends ${item.parentItem.typeName} {

    public static final String ITEM_TYPE = "${item.code}";

#foreach(${attr} in ${item.parentItem.attributes})
    /**
    * ------------------------------------------------------------------------------------------------------------------
    *
    * Generated field info { @name          : ${attr.name}
    *                        @optional      : ${attr.optional}
    *                        @unique        : ${attr.unique}
    *                        @defaultValue  : #if(${attr.defaultValue})${attr.defaultValue}#else n/a #end

    *                        @localized     : ${attr.localized}
    *                        @associated    : ${attr.associated}
    *                        @owner         : ${item.typeName}
    *                        @type          : #if(${vmUtils.isRegularType($attr.type)})${attr.type.shortCode}#else${attr.type.fullTypeName}#end

    *
    * ------------------------------------------------------------------------------------------------------------------
    */
    public static final String ${vmUtils.toUpperCaseWithUnderline(${attr.name})} = "${attr.name}";

#end
#foreach(${attr} in ${item.implicitAttributes})
    /**
    * ------------------------------------------------------------------------------------------------------------------
    *
    * Generated field info { @name          : ${attr.name}
    *                        @optional      : ${attr.optional}
    *                        @unique        : ${attr.unique}
    *                        @defaultValue  : #if(${attr.defaultValue})${attr.defaultValue}#else n/a #end

    *                        @localized     : ${attr.localized}
    *                        @associated    : ${attr.associated}
    *                        @owner         : ${item.typeName}
    *                        @type          : #if(${vmUtils.isRegularType($attr.type)})${attr.type.shortCode}#else${attr.type.fullTypeName}#end

    *
    * ------------------------------------------------------------------------------------------------------------------
    */
    public static final String ${vmUtils.toUpperCaseWithUnderline(${attr.name})} = "${attr.name}";

#end
    public ${item.typeName}() {
        super();
    }

    public ${item.typeName}(ItemContext ctx) {
        super(ctx);
    }

#foreach(${attr} in ${item.parentItem.attributes})
#genAttributeGetterAndSetter($attr)
#end
#foreach(${attr} in ${item.implicitAttributes})
#genAttributeGetterAndSetter($attr)
#end
}


#macro(genAttributeGetterAndSetter $attr)
#if($StringUtils.isNotBlank($attr.description))
/**
* ${attr.description}
*/
#end
#if (${vmUtils.isBooleanType($attr)})
public $attr.type.shortCode is${display.capitalize($attr.name)}(){
    return getItemContext().getValue(${vmUtils.toUpperCaseWithUnderline(${attr.name})});
}
#else
    #set($type =
        "#if(${vmUtils.isRegularType($attr.type)})
            $attr.type.shortCode
        #else
            ${vmUtils.typeForRelation($attr)}
        #end")
public $type.trim() get${display.capitalize($attr.name)}(){
    return getItemContext().getValue(${vmUtils.toUpperCaseWithUnderline(${attr.name})});
}
#end

#if($StringUtils.isNotBlank($attr.description))
/**
* ${attr.description}
*/
#end
public void set${display.capitalize(${attr.name})}($type.trim() ${attr.name}){
    getItemContext().setValue(${vmUtils.toUpperCaseWithUnderline(${attr.name})}, ${attr.name});
}
#end
#* @vtlvariable name="date" type="org.apache.velocity.tools.generic.DateTool" *#
#* @vtlvariable name="esc" type="org.apache.velocity.tools.generic.EscapeTool" *#
#* @vtlvariable name="display" type="org.apache.velocity.tools.generic.DisplayTool" *#
#* @vtlvariable name="item" type="com.coretex.build.data.items.RelationItem" *#
#* @vtlvariable name="vmUtils" type="com.coretex.common.utils.VmUtils" *#
